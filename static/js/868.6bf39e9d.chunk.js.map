{"version":3,"file":"static/js/868.6bf39e9d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/petsUserFolder/EmptyPetsList/empty-pets-list.module.scss?fe43","components/petsUserFolder/EmptyPetsList/EmptyPetsList.jsx","components/userFolder/UserDataItem/UserFormik.jsx","components/userFolder/UserDataItem/UserDataItem.jsx","components/userFolder/UserData/UserData.jsx","webpack://react-homework-template/./src/components/userFolder/Logout/logout.module.scss?2642","components/userFolder/Logout/Logout.jsx","webpack://react-homework-template/./src/components/petsUserFolder/ModalAddsPet/ModalAddPetPages/modal-add-pet-pages.module.scss?d7fa","components/petsUserFolder/ModalAddsPet/ModalAddPetPages/EditPetContent.jsx","webpack://react-homework-template/./src/components/petsUserFolder/ModalAddsPet/modaladdspet.module.scss?e3e4","components/petsUserFolder/ModalAddsPet/ModalAddsPet.jsx","components/petsUserFolder/PetsList/PetsList.jsx","components/petsUserFolder/ModalAddsPet/ModalAddPetPages/AddsPetContent.jsx","components/petsUserFolder/PetsData/PetsData.jsx","webpack://react-homework-template/./src/components/userFolder/DeleteAccount/delete-account.module.scss?d22f","components/userFolder/DeleteAccount/DeleteAccount.jsx","pages/UserPage/UserPage.jsx","webpack://react-homework-template/./src/components/petsUserFolder/PetsData/pets-data.module.scss?0f70","webpack://react-homework-template/./src/components/petsUserFolder/PetsList/pets-list.module.scss?ca7d","webpack://react-homework-template/./src/components/userFolder/UserDataItem/user-data-item.module.scss?aa15","webpack://react-homework-template/./src/pages/UserPage/user-page.module.scss?9462"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"emptyPetsList_box\":\"empty-pets-list_emptyPetsList_box__olodG\",\"emptyPetsList_img\":\"empty-pets-list_emptyPetsList_img__7Y3IF\",\"emptyPetsList_text\":\"empty-pets-list_emptyPetsList_text__wlcVE\"};","import cat from '../../../images/cat_for_empty_user_pets_list.svg'\nimport scss from './empty-pets-list.module.scss'\n\nexport function EmptyPetsList({text}) {\n    return (\n        <div className={scss.emptyPetsList_box}>\n            <img className={scss.emptyPetsList_img} src={cat} alt=\"cat\" />\n            <p className={scss.emptyPetsList_text}>\n                {text}\n            </p>\n        </div>\n    )\n}\n","import scss from './user-data-item.module.scss'\nimport SvgInsert from '../../utilsFolder/Svg/Svg'\nimport { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport operations from 'redux/operations/userOperations'\nimport axios from 'axios'\nimport { Notify } from 'notiflix/build/notiflix-notify-aio'\nimport 'flatpickr/dist/themes/airbnb.css'\nimport Flatpickr from 'react-flatpickr'\nimport { Oval } from 'react-loader-spinner'\n\nconst { REACT_APP_BASE_URL } = process.env\naxios.defaults.baseURL = `${REACT_APP_BASE_URL}/api`\n\nexport function UserFormik() {\n    const dispatch = useDispatch()\n    const userInStore = useSelector(state => state.auth.user)\n    const token = useSelector(state => state.auth.token)\n    const [loading, setLoading] = useState('')\n    const [userName, setUserName] = useState('')\n    const [userEmail, setUserEmail] = useState('')\n    const [userBirthday, setUserBirthday] = useState('')\n    const [userPhone, setUserPhone] = useState('')\n    const [userCity, setUserCity] = useState('')\n    const dateNow = new Date()\n\n    const formatDate = date => {\n        const dateFormat = new Date(date)\n        return `${\n            dateFormat.getMonth() + 1 < 10\n                ? `0${dateFormat.getMonth() + 1}`\n                : dateFormat.getMonth() + 1\n        }.${\n            dateFormat.getDate() < 10\n                ? `0${dateFormat.getDate()}`\n                : dateFormat.getDate()\n        }.${dateFormat.getFullYear()}`\n    }\n\n    useEffect(() => {\n        setLoading(true)\n        if (token !== undefined) {\n            fetch(`${REACT_APP_BASE_URL}/api/users/current`, {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            })\n                .then(response => response.json())\n                .then(data => {\n                    setUserName(data.name)\n                    setUserEmail(data.email)\n                    setUserBirthday(\n                        data.birthday !== undefined\n                            ? formatDate(data.birthday)\n                            : '00.00.0000'\n                    )\n                    setUserPhone(data.phone)\n                    setUserCity(data.city)\n                    setLoading(false)\n                })\n                .catch(error => {\n                    console.log(error)\n                    setLoading(false)\n                })\n            return\n        } else {\n            setUserName(userInStore.name)\n            setUserEmail(userInStore.email)\n            setUserBirthday(\n                userInStore.birthday !== undefined\n                    ? formatDate(userInStore.birthday)\n                    : '00.00.0000'\n            )\n            setUserPhone(userInStore.phone)\n            setUserCity(userInStore.city)\n            setLoading(false)\n        }\n    }, [userInStore, token])\n\n    const handleChange = e => {\n        switch (e.currentTarget.name) {\n            case 'name':\n                setUserName(e.currentTarget.value)\n                break\n\n            case 'email':\n                setUserEmail(e.currentTarget.value)\n                break\n\n            case 'phone':\n                setUserPhone(e.currentTarget.value)\n                break\n\n            case 'city':\n                setUserCity(e.currentTarget.value)\n                break\n\n            default:\n                return\n        }\n    }\n\n    const [active, setActive] = useState('')\n\n    const changeIcon = name => {\n        if (active === name) {\n            return setActive('')\n        }\n        setActive(name)\n    }\n\n    const toggleIcon = name => {\n        if (active === name) {\n            return <SvgInsert id=\"icon-done\" />\n        } else {\n            return <SvgInsert id=\"icon-edit-active\" />\n        }\n    }\n\n    const handleSubmitMail = e => {\n        e.preventDefault()\n        const form = e.currentTarget\n        const { email } = form.elements\n        if(!email.disabled){\n          return\n        }\n        if (!email.value) {\n            return Notify.failure('Required!', { timeout: 5000 })\n        }\n        if (\n            /^((([0-9A-Za-z]{1}[-0-9A-z]{1,}[0-9A-Za-z]{1}))@([-0-9A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/i.test(\n                email.value\n            ) &&\n            email.value.length < 36\n        ) {\n            return dispatch(operations.updateUser({ email: email.value }))\n        } else {\n            return Notify.failure('Invalid email address!', { timeout: 5000 })\n        }\n    }\n\n    const handleSubmitName = e => {\n        e.preventDefault()\n        const form = e.currentTarget\n        const { name } = form.elements\n        if(!name.disabled){\n          return\n        }\n        if (!name.value) {\n            return Notify.failure('Required!', { timeout: 5000 })\n        }\n        return dispatch(operations.updateUser({ name: name.value }))\n    }\n\n    const handleSubmitBirthday = e => {\n        e.preventDefault()\n        const form = e.currentTarget\n        const { birthday } = form.elements\n        if(!birthday.disabled){\n          return\n        }\n        if (!birthday.value) {\n            return Notify.failure('Required!', { timeout: 5000 })\n        }\n        return dispatch(operations.updateUser({ birthday: birthday.value }))\n    }\n\n    const handleSubmitPhone = e => {\n        e.preventDefault()\n        const form = e.currentTarget\n        const { phone } = form.elements\n        if(!phone.disabled){\n          return\n        }\n        if (!phone.value) {\n            return Notify.failure('Required!', { timeout: 5000 })\n        }\n        if (phone.value.length !== 12) {\n            return Notify.failure('Is not correct format, must 380xxxxxxxxx!', {\n                timeout: 5000,\n            })\n        }\n        if (\n            !/^3?[\\s]?8?[\\s]?\\(?0\\d{2}?\\)?[\\s]?\\d{3}[\\s|-]?\\d{2}[\\s|-]?\\d{2}$/.test(\n                phone.value\n            )\n        ) {\n            return Notify.failure('Is not correct format, must 380xxxxxxxxx!', {\n                timeout: 5000,\n            })\n        } else {\n            return dispatch(operations.updateUser({ phone: phone.value }))\n        }\n    }\n\n    const handleSubmitCity = e => {\n        e.preventDefault()\n        const form = e.currentTarget\n        const { city } = form.elements\n        if(!city.disabled){\n          return\n        }\n        if (!city.value) {\n            return Notify.failure('Required!', { timeout: 5000 })\n        }\n        if (!/^[aA-zZ]/.test(city.value)) {\n            return Notify.failure('Is not correct format, must only letters!', {\n                timeout: 5000,\n            })\n        } else {\n            return dispatch(operations.updateUser({ city: city.value }))\n        }\n    }\n\n    return (\n        <>\n            <div className={scss.userDataForm_box}>\n                {loading ? (\n                    <>\n                        <div className={scss.loader__content}>\n                            <Oval\n                                height={80}\n                                width={80}\n                                color=\"#F59256\"\n                                wrapperStyle={{}}\n                                wrapperClass=\"\"\n                                visible={true}\n                                ariaLabel=\"oval-loading\"\n                                secondaryColor=\"#F59256\"\n                                strokeWidth={2}\n                                strokeWidthSecondary={2}\n                            />\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <form onSubmit={handleSubmitName}>\n                            <div className={scss.field_box}>\n                                <label className={scss.userDataForm_label}>\n                                    Name:\n                                </label>\n                                {active && active === 'name' ? (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"name\"\n                                        name=\"name\"\n                                        value={userName}\n                                        className={\n                                            scss.userDataForm_field_active\n                                        }\n                                    />\n                                ) : (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"name\"\n                                        name=\"name\"\n                                        value={userName}\n                                        disabled\n                                        className={scss.userDataForm_field}\n                                    />\n                                )}\n                                <button\n                                    className={scss.iconEdit_btn}\n                                    onClick={() => changeIcon('name')}\n                                    type=\"submit\"\n                                >\n                                    {active ? (\n                                        toggleIcon('name')\n                                    ) : (\n                                        <SvgInsert id=\"icon-edit\" />\n                                    )}\n                                </button>\n                            </div>\n                        </form>\n\n                        <form onSubmit={handleSubmitMail}>\n                            <div className={scss.field_box}>\n                                <label className={scss.userDataForm_label}>\n                                    Email:\n                                </label>\n                                {active && active === 'email' ? (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"email\"\n                                        name=\"email\"\n                                        value={userEmail}\n                                        className={\n                                            scss.userDataForm_field_active\n                                        }\n                                    />\n                                ) : (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"email\"\n                                        name=\"email\"\n                                        value={userEmail}\n                                        disabled\n                                        className={scss.userDataForm_field}\n                                    />\n                                )}\n                                <button\n                                    className={scss.iconEdit_btn}\n                                    onClick={() => changeIcon('email')}\n                                >\n                                    {active ? (\n                                        toggleIcon('email')\n                                    ) : (\n                                        <SvgInsert id=\"icon-edit\" />\n                                    )}\n                                </button>\n                            </div>\n                        </form>\n\n                        <form onSubmit={handleSubmitBirthday}>\n                            <div className={scss.field_box}>\n                                <label className={scss.userDataForm_label}>\n                                    Birthday:\n                                </label>\n                                {active && active === 'birthday' ? (\n                                    <Flatpickr\n                                        options={{\n                                            dateFormat: 'm.d.Y',\n                                            maxDate: `${formatDate(dateNow)}`,\n                                        }}\n                                        onChange={([date]) => {\n                                            setUserBirthday(formatDate(date))\n                                        }}\n                                        type=\"text\"\n                                        name=\"birthday\"\n                                        value={userBirthday}\n                                        className={\n                                            scss.userDataForm_field_active\n                                        }\n                                    />\n                                ) : (\n                                    <Flatpickr\n                                        options={{\n                                            dateFormat: 'm.d.Y',\n                                            maxDate: `${formatDate(dateNow)}`,\n                                        }}\n                                        onChange={([date]) => {\n                                            setUserBirthday(formatDate(date))\n                                        }}\n                                        type=\"text\"\n                                        name=\"birthday\"\n                                        value={userBirthday}\n                                        disabled\n                                        className={scss.userDataForm_field}\n                                    />\n                                )}\n                                <button\n                                    className={scss.iconEdit_btn}\n                                    onClick={() => changeIcon('birthday')}\n                                >\n                                    {active ? (\n                                        toggleIcon('birthday')\n                                    ) : (\n                                        <SvgInsert id=\"icon-edit\" />\n                                    )}\n                                </button>\n                            </div>\n                        </form>\n\n                        <form onSubmit={handleSubmitPhone}>\n                            <div className={scss.field_box}>\n                                <label className={scss.userDataForm_label}>\n                                    Phone:\n                                </label>\n                                {active && active === 'phone' ? (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"tel\"\n                                        name=\"phone\"\n                                        value={userPhone}\n                                        className={\n                                            scss.userDataForm_field_active\n                                        }\n                                    />\n                                ) : (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"tel\"\n                                        name=\"phone\"\n                                        value={userPhone}\n                                        disabled\n                                        className={scss.userDataForm_field}\n                                    />\n                                )}\n                                <button\n                                    className={scss.iconEdit_btn}\n                                    onClick={() => changeIcon('phone')}\n                                    type=\"submit\"\n                                >\n                                    {active ? (\n                                        toggleIcon('phone')\n                                    ) : (\n                                        <SvgInsert id=\"icon-edit\" />\n                                    )}\n                                </button>\n                            </div>\n                        </form>\n\n                        <form onSubmit={handleSubmitCity}>\n                            <div className={scss.field_box}>\n                                <label className={scss.userDataForm_label}>\n                                    City:\n                                </label>\n                                {active && active === 'city' ? (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"text\"\n                                        name=\"city\"\n                                        value={userCity}\n                                        className={\n                                            scss.userDataForm_field_active\n                                        }\n                                    />\n                                ) : (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"text\"\n                                        name=\"city\"\n                                        value={userCity}\n                                        disabled\n                                        className={scss.userDataForm_field}\n                                    />\n                                )}\n                                <button\n                                    className={scss.iconEdit_btn}\n                                    onClick={() => changeIcon('city')}\n                                >\n                                    {active ? (\n                                        toggleIcon('city')\n                                    ) : (\n                                        <SvgInsert id=\"icon-edit\" />\n                                    )}\n                                </button>\n                            </div>\n                        </form>\n                    </>\n                )}\n            </div>\n        </>\n    )\n}\n","import scss from './user-data-item.module.scss';\nimport { UserFormik } from './UserFormik';\nimport SvgInsert from '../../utilsFolder/Svg/Svg';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useSelector, useDispatch } from 'react-redux';\nimport operations from 'redux/operations/userOperations';\nimport axios from 'axios';\nimport { useState } from 'react'\nimport { Watch } from 'react-loader-spinner'\n\nconst { REACT_APP_BASE_URL } = process.env;\naxios.defaults.baseURL = `${REACT_APP_BASE_URL}/api`;\n\nexport default function UserDataItem() {\n  const userInStore = useSelector(state => state.auth.user);\n  const token = useSelector(state => state.auth.token);\n  const [loading, setLoading] = useState('');\n  const dispatch = useDispatch();\n  const defaultImg =\n    'https://dummyimage.com/150x150/FDF7F2.gif&text=Add+your+photo!';\n\n  const handleImageChange = e => {\n    setLoading(true);\n    const reader = new FileReader();\n    const file = e.target.files[0];\n    if (file?.size > 5242880) {\n      Notify.warning('File is too big, please download max 5 mb!', {\n        timeout: 5000,\n      });\n\n      return;\n    }\n    reader.onloadend = () => {\n      dispatch(operations.updateUserAvatar(file));\n      \n    };\n    \n    if (token !== undefined) {\n      reader.readAsDataURL(file);\n    } else {\n      reader.readAsDataURL(file);\n    }\n    setLoading(false);\n    return;\n  };\n\n  return (\n    \n    <div className={scss.userItem_container}>\n     {loading ? (\n      <div className={scss.loading__watch}>\n          <Watch\n            height={50}\n            width={50}\n            color=\"#F59256\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n            ariaLabel=\"watch-loading\"\n            secondaryColor=\"#F59256\"\n            strokeWidth={2}\n            strokeWidthSecondary={2}\n            zIndex='1200'\n\n    />\n      </div>\n      ) : (\n        <>\n        <div className={scss.userItem_box_yourPhoto}>\n        <img className={scss.userItem__yourPhoto} src={userInStore.avatar ? userInStore.avatar : defaultImg} alt=\"\" />\n\n        <div className={scss.userItem_box_btnPhoto}>\n          <>\n            <input\n              className={scss.userItem_input_edit_photo}\n              type=\"file\"\n              name=\"file\"\n              accept=\"image/png, image/jpeg, image/jpg, image/webp\"\n              id=\"file\"\n              onChange={handleImageChange}\n            />\n            <label htmlFor=\"file\" className={scss.userItem_edit_photo}>\n              <SvgInsert id=\"icon-edit-avatar\" />\n              Edit photo\n            </label>\n          </>\n        </div>\n      </div>\n      <UserFormik />\n    </>\n    )}\n  </div>\n  );\n}\n","\nimport UserDataItem from \"../UserDataItem/UserDataItem\";\n\n\n\nexport function UserData() {\n\n\n return (\n          <UserDataItem />\n    );\n      }\n","// extracted by mini-css-extract-plugin\nexport default {\"logout_button\":\"logout_logout_button__+D532\",\"logout_box\":\"logout_logout_box__J-pf9\",\"logout_text\":\"logout_logout_text__M3+5u\"};","import scss from \"./logout.module.scss\";\nimport SvgInsert from \"../../utilsFolder/Svg/Svg\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport operations from '../../../redux/operations/userOperations';\n\n\nexport default function Logout() {\n    const dispatch = useDispatch()\n  \n\n    const onLogout = () => {\n        dispatch(operations.logout())\n    }\n\n    return (\n        <div className={scss.logout_box}>\n            <button className={scss.logout_button} onClick={onLogout}>\n                <SvgInsert id=\"icon-logout\"/>\n                <p className={scss.logout_text}>Logout</p>\n            </button>\n        </div>\n\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"button__primary_not_main\":\"modal-add-pet-pages_button__primary_not_main__ypj+S\",\"button__primary_main\":\"modal-add-pet-pages_button__primary_main__6UTLB\",\"button__secondary\":\"modal-add-pet-pages_button__secondary__q-7f8\",\"button__secondary_active\":\"modal-add-pet-pages_button__secondary_active__H+BuF\",\"button__learn\":\"modal-add-pet-pages_button__learn__Gh7Ff\",\"modalAdds_page\":\"modal-add-pet-pages_modalAdds_page__kFD-P\",\"modalAdds_page__close\":\"modal-add-pet-pages_modalAdds_page__close__-OWMm\",\"modalAdds_page__tittle\":\"modal-add-pet-pages_modalAdds_page__tittle__4VovM\",\"modalAdds_page__input\":\"modal-add-pet-pages_modalAdds_page__input__tw8e9\",\"modalAdds_page__label\":\"modal-add-pet-pages_modalAdds_page__label__XtbYI\",\"modalAdds_page__button\":\"modal-add-pet-pages_modalAdds_page__button__7tqZx\",\"addspet__imgInput\":\"modal-add-pet-pages_addspet__imgInput__4dH5p\",\"addspet__imgLabel\":\"modal-add-pet-pages_addspet__imgLabel__qsG+d\",\"add__pet__container\":\"modal-add-pet-pages_add__pet__container__xobGG\",\"addspetPhoto__container\":\"modal-add-pet-pages_addspetPhoto__container__ddf3R\",\"addspet__photo\":\"modal-add-pet-pages_addspet__photo__D4mvs\",\"addspet__imgLabel_select\":\"modal-add-pet-pages_addspet__imgLabel_select__kF9vd\",\"modalAdds_page__field\":\"modal-add-pet-pages_modalAdds_page__field__aCNSS\",\"modalAdds_page_box\":\"modal-add-pet-pages_modalAdds_page_box__K2BZF\",\"modalAdds_page__photoBox\":\"modal-add-pet-pages_modalAdds_page__photoBox__Pbrna\",\"modalAdds_commit_box\":\"modal-add-pet-pages_modalAdds_commit_box__W6XU2\",\"modalAdds_commit\":\"modal-add-pet-pages_modalAdds_commit__DKD3W\",\"addPet__button\":\"modal-add-pet-pages_addPet__button__RnKuE\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport scss from './modal-add-pet-pages.module.scss';\nimport operationsPets from 'redux/operations/userPetsApi';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n// import Loader from 'components/Loader/Loader';\nimport SvgInsert from '../../../utilsFolder/Svg/Svg';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\n\nconst EditPetContent = ({ close, pets, _id }) => {\n  console.log('_id', _id);\n  console.log('pets', pets);\n  const [stepOne, setStepOne] = useState(true);\n  // const loading = useSelector(state => state.user.loading);\n  const dispatch = useDispatch();\n\n  const isPet = pets.find(e => e._id === _id);\n  \n  console.log('isPet', isPet);\n  const date = isPet.birthday;\n  const editDate = e => {\n  const reversDate = e.slice(0, 10).split('-').reverse();\n  return reversDate.join('.');\n }\n\n  const [petName, setPetName] = useState(isPet.name);\n  const [petDate, setPetDate] = useState(editDate(date));\n  const [petBreed, setPetBreed] = useState(isPet.breed);\n  const [imageURL, setImageURL] = useState(isPet.image);\n  const [petComments, setPetComments] = useState(isPet.comments);\n\n  const changeStepOne = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setPetName(e.currentTarget.value);\n        break;\n\n      case 'date':\n        setPetDate(e.currentTarget.value);\n        break;\n\n      case 'breed':\n        setPetBreed(e.currentTarget.value);\n        break;\n\n      default:\n        return;\n      \n    }\n  };\n\n  const changeStep = () => {\n    return setStepOne(!stepOne);\n  };\n\n  const handleImageChange = e => {\n    const reader = new FileReader();\n    const image = e.target.files[0];\n    if (image?.size > 5242880) {\n      Notify.warning('File is too big, please download max 5 mb!', {\n        timeout: 6000,\n      });\n      setImageURL(null);\n      return;\n    }\n    reader.onloadend = () => {\n      setImageURL(reader.result);\n    };\n    reader.readAsDataURL(image);\n    return;\n  };\n\n  const dateNow = new Date();\n  const formatDate = `${\n    dateNow.getDate() < 10 ? `0${dateNow.getDate()}` : dateNow.getDate()\n  }.${\n    dateNow.getMonth() < 10\n      ? `0${dateNow.getMonth() + 1}`\n      : dateNow.getMonth() + 1\n  }.${dateNow.getFullYear()}`;\n\n  const handleSubmitForStepOne = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const { name, date, breed } = form.elements;\n    setPetName(name.value);\n    setPetDate(date.value);\n    setPetBreed(breed.value);\n    if (new Date(petDate) >= new Date(formatDate)) {\n      return Report.info(\n        'Pet Info',\n        'Please choose a date no later than today.',\n        'Okay'\n      );\n    }\n    return changeStep();\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const { image, comments } = form.elements;\n    setPetComments(comments.value);\n    const data = new FormData();\n    data.append('name', petName);\n    data.append('birthday', petDate);\n    data.append('breed', petBreed);\n    data.append('comments', petComments);\n    data.append('image', image.files[0]);\n    console.log(image.files[0])\n    console.log(\"yyyy\")\n    setPetBreed('');\n    setPetDate('');\n    setPetName('');\n    setImageURL(null);\n    dispatch(operationsPets.addPet(data));\n    form.reset();\n    return close();\n  };\n\n  const validateFile = () => {\n    if(!imageURL){\n      Report.warning(\n        'Pet Warning',\n        'Please add a photo.',\n        'Okay',\n        );\n    }\n  }\n\n  return (\n    <>\n      {/* {loading && <Loader />} */}\n      <div className={scss.modalAdds_page}>\n        <div className={scss.modalAdds_page__close} onClick={close}>\n          <SvgInsert id=\"icon-close\" />\n        </div>\n        <h3 className={scss.modalAdds_page__tittle}>Add pet</h3>\n        {stepOne && (\n          <form onSubmit={handleSubmitForStepOne}>\n            <label\n              className={`${scss.modalAdds_page__label} ${scss.modalAdds_page_box}`}\n            >\n              Name pet\n            </label>\n            <input\n              className={scss.modalAdds_page__input}\n              name=\"name\"\n              placeholder=\"Type name pet\"\n              type=\"text\"\n              required\n              value={petName}\n              onChange={changeStepOne}\n            />\n            <label\n              className={`${scss.modalAdds_page__label} ${scss.modalAdds_page_box}`}\n            >\n              Date of birth\n            </label>\n            <input\n              className={scss.modalAdds_page__input}\n              name=\"date\"\n              type=\"text\"\n              pattern=\"^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d$\"\n              title=\"Date must be in the format: DD.MM.YYYY or DD/MM/YYYY or DD-MM-YYYY\"\n              placeholder=\"Type date of birth\"\n              required\n              value={petDate}\n              onChange={changeStepOne}\n            />\n            <label\n              className={`${scss.modalAdds_page__label} ${scss.modalAdds_page_box}`}\n            >\n              Breed\n            </label>\n            <input\n              className={scss.modalAdds_page__input}\n              type=\"text\"\n              name=\"breed\"\n              placeholder=\"Type breed\"\n              required\n              value={petBreed}\n              onChange={changeStepOne}\n            />\n            <div className={scss.addPet__button}>\n              <button\n                className={`${scss.button__primary_main} ${scss.modalAdds_page__button}`}\n                type=\"submit\"\n              >\n                Next\n              </button>\n              <span\n                className={`${scss.button__primary_not_main} ${scss.modalAdds_page__button}`}\n                onClick={close}\n              >\n                Cancel\n              </span>\n            </div>\n          </form>\n        )}\n        {!stepOne && (\n          <form\n            action=\"\"\n            id=\"book-add-form\"\n            encType=\"multipart/form-data\"\n            onSubmit={handleSubmit}\n          >\n            <div className={scss.add__pet__container}>\n              <p className={scss.modalAdds_page__field}>\n                Add photo and some comments\n              </p>\n\n              <input\n                className={scss.addspet__imgInput}\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/png, image/jpeg, image/jpg, image/webp\"\n                id=\"img\"\n                required\n                title='is required'\n                multiple\n                onChange={handleImageChange}\n              />\n              <label className={scss.addspet__imgLabel} htmlFor=\"img\"></label>\n              {imageURL && (\n                <div className={scss.addspetPhoto__container}>\n                  <p>You image:</p>\n                  <img src={imageURL} alt=\"pet\" />\n                </div>\n              )}\n              <label\n                className={`${scss.modalAdds_page__label} ${scss.modalAdds_commit_box}`}\n              >\n                Comments\n              </label>\n              <textarea\n                className={scss.modalAdds_commit}\n                type=\"text\"\n                name=\"comments\"\n                placeholder=\"Type comments\"\n                value={petComments}\n                minLength={8}\n                required\n              />\n\n              <div className={scss.addPet__button}>\n                <button\n                  className={`${scss.button__primary_main} ${scss.modalAdds_page__button}`}\n                  type=\"submit\"\n                  onClick={validateFile}\n                >\n                  Done\n                </button>\n                <span\n                  className={`${scss.button__primary_not_main} ${scss.modalAdds_page__button}`}\n                  onClick={changeStep}\n                >\n                  Back\n                </span>\n              </div>\n            </div>\n          </form>\n        )}\n      </div>\n    </>\n  );\n};\nexport default EditPetContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modaladdspet_modal__-styr\",\"modal__section\":\"modaladdspet_modal__section__Su0Hj\"};","import scss from './modaladdspet.module.scss';\n\nimport React from 'react';\n\nimport { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalAddsPet = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleDownInEscape = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleDownInEscape);\n    return () => {\n      return window.removeEventListener('keydown', handleDownInEscape);\n    };\n  }, [onClose]);\n\n  const handleDown = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  children = React.cloneElement(children, {\n    close: onClose,\n  });\n\n  return createPortal(\n    <div className={scss.modal} onClick={handleDown}>\n      <div className={scss.modal__section}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default ModalAddsPet;\n","import scss from './pets-list.module.scss';\nimport SvgInsert from '../../utilsFolder/Svg/Svg';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport operationsPets from 'redux/operations/userPetsApi';\nimport { useState } from 'react';\nimport EditPetContent from '../ModalAddsPet/ModalAddPetPages/EditPetContent';\nimport ModalAddsPet from '../ModalAddsPet/ModalAddsPet';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\n\nexport function PetsList() {\n  const dispatch = useDispatch();\n  const pets = useSelector(state => state.user.pets);\n \n\n  const onDeletePet = (_id) => {\n        // dispatch(operationsPets.deletePet(_id));\n    Confirm.show(\n      '',\n      'Are you sure you want to delete your petcard?',\n      'Yes',\n      'No',\n      () => { dispatch(operationsPets.deletePet(_id)) },\n      () => {},\n      {\n        messageFontSize: '20px',\n        borderRadius: '8px',\n        cssAnimationStyle: 'zoom',\n        okButtonColor: '#ffffff',\n        okButtonBackground: '#eebb9c',\n        cancelButtonColor: '#ffffff',\n        cancelButtonBackground: '#F59256',\n      },\n    );\n  }\n  const [modalShow, setModalShow] = useState(false);\n\n   const closeModal = () => {\n    setModalShow(false);\n    document.body.style.overflow = 'visible';\n  };\n\n  const showModal = () => {\n    setModalShow(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const elements = pets.map(({ name, birthday, breed, image, comments, _id }) => {\n\n    const editDate = e => {\n      const reversDate = e.slice(0, 10).split('-').reverse();\n      return reversDate.join('.');\n }\n\n    return (\n      <li className={scss.petsList_box} key={_id}>\n        <img className={scss.petsList_photo} src={image} alt=\"\" />\n        <div className={scss.petsList_text_box}>\n          <p className={scss.petsList_field}>\n           <span className={scss.labelPets}>Name:</span> \n           {name}</p>\n          <p className={scss.petsList_field}>\n           <span className={scss.labelPets}>Date of birth:</span>  \n            {editDate(birthday)}</p>\n          <p className={scss.petsList_field}>\n           <span className={scss.labelPets}>Breed:</span>  \n            {breed} </p>\n          <p className={scss.petsList_field}>\n           <span className={scss.labelPets}>Comments:</span>  \n            {comments} </p>\n          <button className={scss.petsList_button} onClick={()=> onDeletePet(_id)} type=\"button\">\n            <SvgInsert id=\"icon-delete\" />\n          </button>\n          <button\n            className={scss.iconEdit_btn}\n              onClick={showModal }\n            >\n            <SvgInsert id=\"icon-edit\" />\n          </button>\n          <div >\n        {modalShow && (\n          <>\n            <ModalAddsPet onClose={closeModal}>\n                  <EditPetContent _id={_id} pets={pets}/>\n            </ModalAddsPet>\n          </>\n        )}\n      </div>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      <ol className={scss.petList_container} >{elements}</ol>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport scss from './modal-add-pet-pages.module.scss';\nimport operationsPets from 'redux/operations/userPetsApi';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport Loader from 'components/utilsFolder/Loader/Loader';\nimport SvgInsert from '../../../utilsFolder/Svg/Svg';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import 'flatpickr/dist/themes/material_orange.css'\nimport Flatpickr from 'react-flatpickr'\n\nconst AddsPetContent = ({ close }) => {\n  const [stepOne, setStepOne] = useState(true);\n  const [petName, setPetName] = useState('');\n  const [petDate, setPetDate] = useState('');\n  const [petBreed, setPetBreed] = useState('');\n  const [imageURL, setImageURL] = useState(null);\n  \n  const loading = useSelector(state => state.user.loading);\n\n  const dispatch = useDispatch();\n\n  const changeStepOne = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setPetName(e.currentTarget.value);\n        break;\n\n      // case 'date':\n      //   setPetDate(e.currentTarget.value);\n      //   break;\n\n      case 'breed':\n        setPetBreed(e.currentTarget.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const changeStep = () => {\n    return setStepOne(!stepOne);\n  };\n\n  const handleImageChange = e => {\n    const reader = new FileReader();\n    const image = e.target.files[0];\n    if (image?.size > 5242880) {\n      Notify.warning('File is too big, please download max 5 mb!', {\n        timeout: 6000,\n      });\n      setImageURL(null);\n      return;\n    }\n    reader.onloadend = () => {\n      setImageURL(reader.result);\n    };\n    reader.readAsDataURL(image);\n    return;\n  };\n\n  const dateNow = new Date();\n\n  const formatDate = date => {\n    const dateFormat = new Date(date)\n    return `${\n      dateFormat.getMonth() + 1 < 10\n          ? `0${dateFormat.getMonth() + 1}`\n          : dateFormat.getMonth() + 1\n  }.${\n    dateFormat.getDate() < 10\n        ? `0${dateFormat.getDate()}`\n        : dateFormat.getDate()\n}.${dateFormat.getFullYear()}`\n}\n\n  const handleSubmitForStepOne = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const { name, date, breed } = form.elements;\n    setPetName(name.value);\n    setPetDate(date.value);\n    setPetBreed(breed.value);\n    return changeStep();\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const { image, comments } = form.elements;\n    const data = new FormData();\n    data.append('name', petName);\n    data.append('birthday', petDate);\n    data.append('breed', petBreed);\n    data.append('comments', comments.value);\n    data.append('image', image.files[0]);\n    setPetBreed('');\n    setPetDate('');\n    setPetName('');\n    setImageURL(null);\n    dispatch(operationsPets.addPet(data));\n    form.reset();\n    return close();\n  };\n\n  const validateFile = () => {\n    if(!imageURL){\n      Report.warning(\n        'Pet Warning',\n        'Please add a photo.',\n        'Okay',\n        );\n    }\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div className={scss.modalAdds_page}>\n        <div className={scss.modalAdds_page__close} onClick={close}>\n          <SvgInsert id=\"icon-close\" />\n        </div>\n        <h3 className={scss.modalAdds_page__tittle}>Add pet</h3>\n        {stepOne && (\n          <form onSubmit={handleSubmitForStepOne}>\n            <label\n              className={`${scss.modalAdds_page__label} ${scss.modalAdds_page_box}`}\n            >\n              Name pet\n            </label>\n            <input\n              className={scss.modalAdds_page__input}\n              name=\"name\"\n              placeholder=\"Type name pet\"\n              type=\"text\"\n              required\n              value={petName}\n              onChange={changeStepOne}\n            />\n            <label\n              className={`${scss.modalAdds_page__label} ${scss.modalAdds_page_box}`}\n            >\n              Date of birth\n            </label>\n            <Flatpickr\n              className={scss.modalAdds_page__input}\n              name=\"date\"\n              type=\"text\"\n              placeholder=\"Type date of birth\"\n              required\n              value={petDate}\n              options={{\n                dateFormat: 'm.d.Y',\n                maxDate: `${formatDate(dateNow)}`,\n            }}\n            onChange={([date]) => {\n                setPetDate(formatDate(date))\n            }}\n            />\n            <label\n              className={`${scss.modalAdds_page__label} ${scss.modalAdds_page_box}`}\n            >\n              Breed\n            </label>\n            <input\n              className={scss.modalAdds_page__input}\n              type=\"text\"\n              name=\"breed\"\n              placeholder=\"Type breed\"\n              required\n              value={petBreed}\n              onChange={changeStepOne}\n            />\n            <div className={scss.addPet__button}>\n              <button\n                className={`${scss.button__primary_main} ${scss.modalAdds_page__button}`}\n                type=\"submit\"\n              >\n                Next\n              </button>\n              <span\n                className={`${scss.button__primary_not_main} ${scss.modalAdds_page__button}`}\n                onClick={close}\n              >\n                Cancel\n              </span>\n            </div>\n          </form>\n        )}\n        {!stepOne && (\n          <form\n            action=\"\"\n            id=\"book-add-form\"\n            encType=\"multipart/form-data\"\n            onSubmit={handleSubmit}\n          >\n            <div className={scss.add__pet__container}>\n              <p className={scss.modalAdds_page__field}>\n                Add photo and some comments\n              </p>\n\n              <input\n                className={scss.addspet__imgInput}\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/png, image/jpeg, image/jpg, image/webp\"\n                id=\"img\"\n                required\n                title='is required'\n                multiple\n                onChange={handleImageChange}\n              />\n              <label className={scss.addspet__imgLabel} htmlFor=\"img\">\n                {imageURL && (\n                  <div className={scss.addspetPhoto__container}>\n                    <img src={imageURL} alt=\"pet\" className={scss.addspet__photo} />\n                  </div>\n                )}\n              </label>\n              <label\n                className={`${scss.modalAdds_page__label} ${scss.modalAdds_commit_box}`}\n              >\n                Comments\n              </label>\n              <textarea\n                className={scss.modalAdds_commit}\n                type=\"text\"\n                name=\"comments\"\n                placeholder=\"Type comments\"\n                minLength={8}\n                required\n              />\n\n              <div className={scss.addPet__button}>\n                <button\n                  className={`${scss.button__primary_main} ${scss.modalAdds_page__button}`}\n                  type=\"submit\"\n                  onClick={validateFile}\n                >\n                  Done\n                </button>\n                <span\n                  className={`${scss.button__primary_not_main} ${scss.modalAdds_page__button}`}\n                  onClick={changeStep}\n                >\n                  Back\n                </span>\n              </div>\n            </div>\n          </form>\n        )}\n      </div>\n    </>\n  );\n};\nexport default AddsPetContent;\n","import { PetsList } from '../PetsList/PetsList'\nimport { EmptyPetsList } from '../EmptyPetsList/EmptyPetsList'\nimport ModalAddsPet from '../ModalAddsPet/ModalAddsPet'\nimport AddsPetContent from '../ModalAddsPet/ModalAddPetPages/AddsPetContent'\n// import operationsPets from 'redux/operations/userPetsApi'\n// import { useEffect } from 'react'\nimport Loader from 'components/utilsFolder/Loader/Loader'\nimport { useState } from 'react'\nimport SvgInsert from '../../utilsFolder/Svg/Svg'\nimport { useSelector } from 'react-redux'\n// import { useSelector, useDispatch } from 'react-redux'\n\nimport scss from './pets-data.module.scss'\n\nfunction PetsData() {\n    const [modalShow, setModalShow] = useState(false)\n    const pets = useSelector(state => state.user.pets)\n\n    const loading = useSelector(state => state.user.loading)\n    // const dispatch = useDispatch()\n\n    const closeModal = () => {\n        setModalShow(false)\n        document.body.style.overflow = 'visible'\n    }\n\n    const showModal = () => {\n        setModalShow(true)\n        document.body.style.overflow = 'hidden'\n    }\n\n    return (\n        <>\n            {loading && <Loader />}\n            <div className={scss.petsData_title_box}>\n                <h2 className={scss.petsData_title}>My pets:</h2>\n                <div className={scss.addPetModal_buttonBox}>\n                    <button\n                        className={scss.addPetModal_button}\n                        type=\"button\"\n                        onClick={showModal}\n                    >\n                        Add pet{' '}\n                        <SvgInsert\n                            className={scss.iconAddPet}\n                            id=\"icon-add-pet\"\n                        />\n                    </button>\n                </div>\n            </div>\n            <div className={scss.petsData__container}>\n                {modalShow && (\n                    <>\n                        <ModalAddsPet onClose={closeModal}>\n                            <AddsPetContent />\n                        </ModalAddsPet>\n                    </>\n                )}\n\n                <div className={scss.overflow}>\n                    {pets.length === 0 ? <EmptyPetsList text='You haven`t added any animals to your list yet'/> : <PetsList />}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default PetsData\n","// extracted by mini-css-extract-plugin\nexport default {\"delete_account_button\":\"delete-account_delete_account_button__hYzSV\",\"delete_account_box\":\"delete-account_delete_account_box__Knbbz\",\"delete_icon\":\"delete-account_delete_icon__si2ko\"};","import scss from \"./delete-account.module.scss\";\nimport SvgInsert from \"../../utilsFolder/Svg/Svg\";\nimport React from 'react';\n// import { useDispatch } from 'react-redux';\n// import operations from '../../redux/operations';\n\n\nexport default function DeleteAccount() {\n    // const dispatch = useDispatch()\n  \n\n    // const DeleteAccount = () => {\n    //     dispatch(operations.deleteAccount())\n    // }\n\n    return (\n        <div className={scss.delete_account_box}>\n            <button className={scss.delete_account_button}>\n                <p className={scss.delete_account_text}>Delete account</p>\n                <SvgInsert className={scss.delete_icon} id=\"icon-delete\" />\n            </button>\n        </div>\n\n    )\n}","import React from 'react';\nimport { UserData } from '../../components/userFolder/UserData/UserData';\nimport Logout from '../../components/userFolder/Logout/Logout';\nimport PetsData from '../../components/petsUserFolder/PetsData/PetsData';\nimport DeleteAccount from '../../components/userFolder/DeleteAccount/DeleteAccount';\nimport scss from '../../helpers/container.module.scss';\nimport style from './user-page.module.scss';\n\nfunction UserPage() {\n  return (\n    <div className={style.userPage_container}>\n      <div className={scss.container}>\n        <div className={style.userPage_section}>\n          <h2 className={style.userPage_title}>My information:</h2>\n          <div className={style.userData_box}>\n            <UserData />\n            <div  className={style.userData_box_btn}>\n              <Logout />\n              <DeleteAccount/>\n            </div>\n          </div>\n        </div>\n        <div className={style.petsData_section}>\n          <PetsData />\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default UserPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"petsData_section\":\"pets-data_petsData_section__UieBz\",\"petsData_title_box\":\"pets-data_petsData_title_box__8HxHW\",\"petsData_title\":\"pets-data_petsData_title__Qq4C7\",\"addPetModal_buttonBox\":\"pets-data_addPetModal_buttonBox__HEU95\",\"addPetModal_button\":\"pets-data_addPetModal_button__qP0Zy\",\"petModal_button\":\"pets-data_petModal_button__sBu2c\",\"petModal_box_btn\":\"pets-data_petModal_box_btn__IdO3N\",\"petsData__container\":\"pets-data_petsData__container__2G1w-\",\"overflow\":\"pets-data_overflow__Rtx7o\"};","// extracted by mini-css-extract-plugin\nexport default {\"petsList_box\":\"pets-list_petsList_box__bIXg+\",\"petsList_photo\":\"pets-list_petsList_photo__JyEpp\",\"petsList_text_box\":\"pets-list_petsList_text_box__Vg0+q\",\"labelPets\":\"pets-list_labelPets__xVmkl\",\"petsList_field\":\"pets-list_petsList_field__+BhHE\",\"petsList_button\":\"pets-list_petsList_button__QczPj\",\"iconEdit_btn\":\"pets-list_iconEdit_btn__tEFOh\",\"petList_container\":\"pets-list_petList_container__jrBD0\"};","// extracted by mini-css-extract-plugin\nexport default {\"userItem_container\":\"user-data-item_userItem_container__neJio\",\"userItem_box_yourPhoto\":\"user-data-item_userItem_box_yourPhoto__A6dWO\",\"userItem_box_btnPhoto\":\"user-data-item_userItem_box_btnPhoto__e8bo1\",\"userItem_button\":\"user-data-item_userItem_button__0Gg6V\",\"userDataForm_box\":\"user-data-item_userDataForm_box__UwT0M\",\"field_box\":\"user-data-item_field_box__4xcgt\",\"userDataForm_field\":\"user-data-item_userDataForm_field__32mZT\",\"userDataForm_field_active\":\"user-data-item_userDataForm_field_active__CXnHf\",\"userDataForm_field_input\":\"user-data-item_userDataForm_field_input__1QaxO\",\"iconEdit_btn\":\"user-data-item_iconEdit_btn__LP-z7\",\"userDataForm_label\":\"user-data-item_userDataForm_label__oNaKJ\",\"userItem_button_icon\":\"user-data-item_userItem_button_icon__rwvks\",\"userItem_edit_photo\":\"user-data-item_userItem_edit_photo__55rGT\",\"userItem_input_edit_photo\":\"user-data-item_userItem_input_edit_photo__LoxV3\",\"userItem__yourPhoto\":\"user-data-item_userItem__yourPhoto__Xt9Av\",\"iconEdit_active\":\"user-data-item_iconEdit_active__6fdvC\",\"iconEdit\":\"user-data-item_iconEdit__qx3-w\",\"iconEdit_done\":\"user-data-item_iconEdit_done__EvnCx\"};","// extracted by mini-css-extract-plugin\nexport default {\"userPage_container\":\"user-page_userPage_container__PYPVq\",\"userPage_section\":\"user-page_userPage_section__+jTMM\",\"petsData_section\":\"user-page_petsData_section__jEW1G\",\"userPage_title\":\"user-page_userPage_title__bSasD\",\"userData_box\":\"user-page_userData_box__sKupV\",\"userData_box_btn\":\"user-page_userData_box_btn__ZDRDR\"};"],"names":["EmptyPetsList","text","className","scss","src","cat","alt","REACT_APP_BASE_URL","process","UserFormik","dispatch","useDispatch","userInStore","useSelector","state","auth","user","token","useState","loading","setLoading","userName","setUserName","userEmail","setUserEmail","userBirthday","setUserBirthday","userPhone","setUserPhone","userCity","setUserCity","dateNow","Date","formatDate","date","dateFormat","getMonth","getDate","getFullYear","useEffect","undefined","name","email","birthday","phone","city","fetch","method","headers","Authorization","then","response","json","data","catch","error","console","log","handleChange","e","currentTarget","value","active","setActive","changeIcon","toggleIcon","Svg","id","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","onSubmit","preventDefault","elements","disabled","operations","Notify","timeout","onChange","type","onClick","test","length","options","maxDate","axios","UserDataItem","wrapperClassName","zIndex","avatar","accept","reader","FileReader","file","target","files","size","onloadend","readAsDataURL","htmlFor","UserData","Logout","close","pets","_id","stepOne","setStepOne","isPet","find","petName","setPetName","slice","split","reverse","join","petDate","setPetDate","breed","petBreed","setPetBreed","image","imageURL","setImageURL","comments","petComments","setPetComments","changeStepOne","changeStep","Report","placeholder","required","pattern","title","action","encType","form","FormData","append","operationsPets","reset","multiple","result","minLength","modalRoot","document","querySelector","onClose","children","handleDownInEscape","code","window","addEventListener","removeEventListener","React","createPortal","PetsList","modalShow","setModalShow","closeModal","body","style","overflow","showModal","map","Confirm","messageFontSize","borderRadius","cssAnimationStyle","okButtonColor","okButtonBackground","cancelButtonColor","cancelButtonBackground","onDeletePet","Loader","DeleteAccount"],"sourceRoot":""}