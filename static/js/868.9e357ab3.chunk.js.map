{"version":3,"file":"static/js/868.9e357ab3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/petsUserFolder/EmptyPetsList/empty-pets-list.module.scss?fe43","components/petsUserFolder/EmptyPetsList/EmptyPetsList.jsx","components/userFolder/UserDataItem/UserFormik.jsx","components/userFolder/UserDataItem/UserDataItem.jsx","components/userFolder/UserData/UserData.jsx","webpack://react-homework-template/./src/components/userFolder/Logout/logout.module.scss?2642","components/userFolder/Logout/Logout.jsx","webpack://react-homework-template/./src/components/petsUserFolder/ModalAddsPet/ModalAddPetPages/modal-add-pet-pages.module.scss?d7fa","components/petsUserFolder/ModalAddsPet/ModalAddPetPages/EditPetContent.jsx","webpack://react-homework-template/./src/components/petsUserFolder/ModalAddsPet/modaladdspet.module.scss?e3e4","components/petsUserFolder/ModalAddsPet/ModalAddsPet.jsx","components/petsUserFolder/PetsList/PetsList.jsx","components/petsUserFolder/ModalAddsPet/ModalAddPetPages/AddsPetContent.jsx","components/petsUserFolder/PetsData/PetsData.jsx","webpack://react-homework-template/./src/components/userFolder/DeleteAccount/delete-account.module.scss?d22f","components/userFolder/DeleteAccount/DeleteAccount.jsx","pages/UserPage/UserPage.jsx","webpack://react-homework-template/./src/components/petsUserFolder/PetsData/pets-data.module.scss?0f70","webpack://react-homework-template/./src/components/petsUserFolder/PetsList/pets-list.module.scss?ca7d","webpack://react-homework-template/./src/components/userFolder/UserDataItem/user-data-item.module.scss?aa15","webpack://react-homework-template/./src/pages/UserPage/user-page.module.scss?9462"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"emptyPetsList_box\":\"empty-pets-list_emptyPetsList_box__olodG\",\"emptyPetsList_img\":\"empty-pets-list_emptyPetsList_img__7Y3IF\",\"emptyPetsList_text\":\"empty-pets-list_emptyPetsList_text__wlcVE\"};","import cat from '../../../images/cat_for_empty_user_pets_list.svg'\nimport scss from './empty-pets-list.module.scss'\n\nexport function EmptyPetsList({text}) {\n    return (\n        <div className={scss.emptyPetsList_box}>\n            <img className={scss.emptyPetsList_img} src={cat} alt=\"cat\" />\n            <p className={scss.emptyPetsList_text}>\n                {text}\n            </p>\n        </div>\n    )\n}\n","import scss from './user-data-item.module.scss'\nimport SvgInsert from '../../utilsFolder/Svg/Svg'\nimport { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport operations from 'redux/operations/userOperations'\nimport axios from 'axios'\nimport { Notify } from 'notiflix/build/notiflix-notify-aio'\nimport 'flatpickr/dist/themes/airbnb.css'\nimport Flatpickr from 'react-flatpickr'\nimport { Oval } from 'react-loader-spinner'\n\nconst { REACT_APP_BASE_URL } = process.env\naxios.defaults.baseURL = `${REACT_APP_BASE_URL}/api`\n\nexport function UserFormik() {\n    const dispatch = useDispatch()\n    const userInStore = useSelector(state => state.auth.user)\n    const token = useSelector(state => state.auth.token)\n    const [loading, setLoading] = useState('')\n    const [userName, setUserName] = useState('')\n    const [userEmail, setUserEmail] = useState('')\n    const [userBirthday, setUserBirthday] = useState('')\n    const [userPhone, setUserPhone] = useState('')\n    const [userCity, setUserCity] = useState('')\n    const dateNow = new Date()\n\n    const formatDate = date => {\n        const dateFormat = new Date(date)\n        return `${\n            dateFormat.getMonth() + 1 < 10\n                ? `0${dateFormat.getMonth() + 1}`\n                : dateFormat.getMonth() + 1\n        }.${\n            dateFormat.getDate() < 10\n                ? `0${dateFormat.getDate()}`\n                : dateFormat.getDate()\n        }.${dateFormat.getFullYear()}`\n    }\n\n    useEffect(() => {\n        setLoading(true)\n        if (token !== undefined) {\n            fetch(`${REACT_APP_BASE_URL}/api/users/current`, {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            })\n                .then(response => response.json())\n                .then(data => {\n                    setUserName(data.name)\n                    setUserEmail(data.email)\n                    setUserBirthday(\n                        data.birthday !== undefined\n                            ? formatDate(data.birthday)\n                            : '00.00.0000'\n                    )\n                    setUserPhone(data.phone)\n                    setUserCity(data.city)\n                    setLoading(false)\n                })\n                .catch(error => {\n                    console.log(error)\n                    setLoading(false)\n                })\n            return\n        } else {\n            setUserName(userInStore.name)\n            setUserEmail(userInStore.email)\n            setUserBirthday(\n                userInStore.birthday !== undefined\n                    ? formatDate(userInStore.birthday)\n                    : '00.00.0000'\n            )\n            setUserPhone(userInStore.phone)\n            setUserCity(userInStore.city)\n            setLoading(false)\n        }\n    }, [userInStore, token])\n\n    const handleChange = e => {\n        switch (e.currentTarget.name) {\n            case 'name':\n                setUserName(e.currentTarget.value)\n                break\n\n            case 'email':\n                setUserEmail(e.currentTarget.value)\n                break\n\n            case 'phone':\n                setUserPhone(e.currentTarget.value)\n                break\n\n            case 'city':\n                setUserCity(e.currentTarget.value)\n                break\n\n            default:\n                return\n        }\n    }\n\n    const [active, setActive] = useState('')\n\n    const changeIcon = name => {\n        if (active === name) {\n            return setActive('')\n        }\n        setActive(name)\n    }\n\n    const toggleIcon = name => {\n        if (active === name) {\n            return <SvgInsert id=\"icon-done\" />\n        } else {\n            return <SvgInsert id=\"icon-edit-active\" />\n        }\n    }\n\n    const handleSubmitMail = e => {\n        e.preventDefault()\n        const form = e.currentTarget\n        const { email } = form.elements\n        if(!email.disabled){\n          return\n        }\n        if (!email.value) {\n            return Notify.failure('Required!', { timeout: 5000 })\n        }\n        if (\n            /^((([0-9A-Za-z]{1}[-0-9A-z]{1,}[0-9A-Za-z]{1}))@([-0-9A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/i.test(\n                email.value\n            ) &&\n            email.value.length < 36\n        ) {\n            return dispatch(operations.updateUser({ email: email.value }))\n        } else {\n            return Notify.failure('Invalid email address!', { timeout: 5000 })\n        }\n    }\n\n    const handleSubmitName = e => {\n        e.preventDefault()\n        const form = e.currentTarget\n        const { name } = form.elements\n        if(!name.disabled){\n          return\n        }\n        if (!name.value) {\n            return Notify.failure('Required!', { timeout: 5000 })\n        }\n        return dispatch(operations.updateUser({ name: name.value }))\n    }\n\n    const handleSubmitBirthday = e => {\n        e.preventDefault()\n        const form = e.currentTarget\n        const { birthday } = form.elements\n        if(!birthday.disabled){\n          return\n        }\n        if (!birthday.value) {\n            return Notify.failure('Required!', { timeout: 5000 })\n        }\n        return dispatch(operations.updateUser({ birthday: birthday.value }))\n    }\n\n    const handleSubmitPhone = e => {\n        e.preventDefault()\n        const form = e.currentTarget\n        const { phone } = form.elements\n        if(!phone.disabled){\n          return\n        }\n        if (!phone.value) {\n            return Notify.failure('Required!', { timeout: 5000 })\n        }\n        if (phone.value.length !== 12) {\n            return Notify.failure('Is not correct format, must 380xxxxxxxxx!', {\n                timeout: 5000,\n            })\n        }\n        if (\n            !/^3?[\\s]?8?[\\s]?\\(?0\\d{2}?\\)?[\\s]?\\d{3}[\\s|-]?\\d{2}[\\s|-]?\\d{2}$/.test(\n                phone.value\n            )\n        ) {\n            return Notify.failure('Is not correct format, must 380xxxxxxxxx!', {\n                timeout: 5000,\n            })\n        } else {\n            return dispatch(operations.updateUser({ phone: phone.value }))\n        }\n    }\n\n    const handleSubmitCity = e => {\n        e.preventDefault()\n        const form = e.currentTarget\n        const { city } = form.elements\n        if(!city.disabled){\n          return\n        }\n        if (!city.value) {\n            return Notify.failure('Required!', { timeout: 5000 })\n        }\n        if (!/^[aA-zZ]/.test(city.value)) {\n            return Notify.failure('Is not correct format, must only letters!', {\n                timeout: 5000,\n            })\n        } else {\n            return dispatch(operations.updateUser({ city: city.value }))\n        }\n    }\n\n    return (\n        <>\n            <div className={scss.userDataForm_box}>\n                {loading ? (\n                    <>\n                        <div className={scss.loader__content}>\n                            <div className={scss.loader_oval}>\n                                <Oval\n                                height={60}\n                                width={60}\n                                color=\"#F59256\"\n                                wrapperStyle={{}}\n                                wrapperClass=\"\"\n                                visible={true}\n                                ariaLabel=\"oval-loading\"\n                                secondaryColor=\"#F59256\"\n                                strokeWidth={2}\n                                strokeWidthSecondary={2}\n                            />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <form onSubmit={handleSubmitName}>\n                            <div className={scss.field_box}>\n                                <label className={scss.userDataForm_label}>\n                                    Name:\n                                </label>\n                                {active && active === 'name' ? (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"name\"\n                                        name=\"name\"\n                                        value={userName}\n                                        className={\n                                            scss.userDataForm_field_active\n                                        }\n                                    />\n                                ) : (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"name\"\n                                        name=\"name\"\n                                        value={userName}\n                                        disabled\n                                        className={scss.userDataForm_field}\n                                    />\n                                )}\n                                <button\n                                    className={scss.iconEdit_btn}\n                                    onClick={() => changeIcon('name')}\n                                    type=\"submit\"\n                                >\n                                    {active ? (\n                                        toggleIcon('name')\n                                    ) : (\n                                        <SvgInsert id=\"icon-edit\" />\n                                    )}\n                                </button>\n                            </div>\n                        </form>\n\n                        <form onSubmit={handleSubmitMail}>\n                            <div className={scss.field_box}>\n                                <label className={scss.userDataForm_label}>\n                                    Email:\n                                </label>\n                                {active && active === 'email' ? (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"email\"\n                                        name=\"email\"\n                                        value={userEmail}\n                                        className={\n                                            scss.userDataForm_field_active\n                                        }\n                                    />\n                                ) : (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"email\"\n                                        name=\"email\"\n                                        value={userEmail}\n                                        disabled\n                                        className={scss.userDataForm_field}\n                                    />\n                                )}\n                                <button\n                                    className={scss.iconEdit_btn}\n                                    onClick={() => changeIcon('email')}\n                                >\n                                    {active ? (\n                                        toggleIcon('email')\n                                    ) : (\n                                        <SvgInsert id=\"icon-edit\" />\n                                    )}\n                                </button>\n                            </div>\n                        </form>\n\n                        <form onSubmit={handleSubmitBirthday}>\n                            <div className={scss.field_box}>\n                                <label className={scss.userDataForm_label}>\n                                    Birthday:\n                                </label>\n                                {active && active === 'birthday' ? (\n                                    <Flatpickr\n                                        options={{\n                                            dateFormat: 'm.d.Y',\n                                            maxDate: `${formatDate(dateNow)}`,\n                                        }}\n                                        onChange={([date]) => {\n                                            setUserBirthday(formatDate(date))\n                                        }}\n                                        type=\"text\"\n                                        name=\"birthday\"\n                                        value={userBirthday}\n                                        className={\n                                            scss.userDataForm_field_active\n                                        }\n                                    />\n                                ) : (\n                                    <Flatpickr\n                                        options={{\n                                            dateFormat: 'm.d.Y',\n                                            maxDate: `${formatDate(dateNow)}`,\n                                        }}\n                                        onChange={([date]) => {\n                                            setUserBirthday(formatDate(date))\n                                        }}\n                                        type=\"text\"\n                                        name=\"birthday\"\n                                        value={userBirthday}\n                                        disabled\n                                        className={scss.userDataForm_field}\n                                    />\n                                )}\n                                <button\n                                    className={scss.iconEdit_btn}\n                                    onClick={() => changeIcon('birthday')}\n                                >\n                                    {active ? (\n                                        toggleIcon('birthday')\n                                    ) : (\n                                        <SvgInsert id=\"icon-edit\" />\n                                    )}\n                                </button>\n                            </div>\n                        </form>\n\n                        <form onSubmit={handleSubmitPhone}>\n                            <div className={scss.field_box}>\n                                <label className={scss.userDataForm_label}>\n                                    Phone:\n                                </label>\n                                {active && active === 'phone' ? (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"tel\"\n                                        name=\"phone\"\n                                            value={userPhone}\n                                        className={\n                                            scss.userDataForm_field_active\n                                        }\n                                    />\n                                ) : (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"tel\"\n                                        name=\"phone\"\n                                        value={`+${userPhone}`}\n                                        disabled\n                                        className={scss.userDataForm_field}\n                                    />\n                                )}\n                                <button\n                                    className={scss.iconEdit_btn}\n                                    onClick={() => changeIcon('phone')}\n                                    type=\"submit\"\n                                >\n                                    {active ? (\n                                        toggleIcon('phone')\n                                    ) : (\n                                        <SvgInsert id=\"icon-edit\" />\n                                    )}\n                                </button>\n                            </div>\n                        </form>\n\n                        <form onSubmit={handleSubmitCity}>\n                            <div className={scss.field_box}>\n                                <label className={scss.userDataForm_label}>\n                                    City:\n                                </label>\n                                {active && active === 'city' ? (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"text\"\n                                        name=\"city\"\n                                        value={userCity}\n                                        className={\n                                            scss.userDataForm_field_active\n                                        }\n                                    />\n                                ) : (\n                                    <input\n                                        onChange={handleChange}\n                                        type=\"text\"\n                                        name=\"city\"\n                                        value={userCity}\n                                        disabled\n                                        className={scss.userDataForm_field}\n                                    />\n                                )}\n                                <button\n                                    className={scss.iconEdit_btn}\n                                    onClick={() => changeIcon('city')}\n                                >\n                                    {active ? (\n                                        toggleIcon('city')\n                                    ) : (\n                                        <SvgInsert id=\"icon-edit\" />\n                                    )}\n                                </button>\n                            </div>\n                        </form>\n                    </>\n                )}\n            </div>\n        </>\n    )\n}\n","import scss from './user-data-item.module.scss';\nimport { UserFormik } from './UserFormik';\nimport SvgInsert from '../../utilsFolder/Svg/Svg';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useSelector, useDispatch } from 'react-redux';\nimport operations from 'redux/operations/userOperations';\nimport axios from 'axios';\n\nconst { REACT_APP_BASE_URL } = process.env;\naxios.defaults.baseURL = `${REACT_APP_BASE_URL}/api`;\n\nexport default function UserDataItem() {\n  const userInStore = useSelector(state => state.auth.user);\n  const token = useSelector(state => state.auth.token);\n  const dispatch = useDispatch();\n  const defaultImg =\n    'https://dummyimage.com/150x150/FDF7F2.gif&text=Add+your+photo!';\n\n  const handleImageChange = e => {\n    const reader = new FileReader();\n    const file = e.target.files[0];\n    if (file?.size > 5242880) {\n      Notify.warning('File is too big, please download max 5 mb!', {\n        timeout: 5000,\n      });\n      \n      return;\n    }\n      \n    reader.onloadend = () => {\n      dispatch(operations.updateUserAvatar(file));\n      \n    };\n \n    if (token !== undefined) {\n      reader.readAsDataURL(file);\n\n    } else {\n      reader.readAsDataURL(file);\n    }\n\n    return;\n  };\n\n  return (\n    \n          <div className={scss.userItem_container}>\n            <div className={scss.userItem_box_yourPhoto}>\n          <img className={scss.userItem__yourPhoto} src={userInStore.avatar ? userInStore.avatar : defaultImg} alt=\"\" />\n                      <div className={scss.userItem_box_btnPhoto}>    \n                    <input\n                      className={scss.userItem_input_edit_photo}\n                      type=\"file\"\n                      name=\"file\"\n                      accept=\"image/png, image/jpeg, image/jpg, image/webp\"\n                      id=\"file\"\n                      onChange={handleImageChange}\n                    />\n                    <label htmlFor=\"file\" className={scss.userItem_edit_photo}>\n                      <SvgInsert id=\"icon-edit-avatar\" />\n                      Edit photo\n                    </label>\n              </div>\n             </div>  \n            <UserFormik />\n      </div>\n  );\n}\n","\nimport UserDataItem from \"../UserDataItem/UserDataItem\";\n\n\n\nexport function UserData() {\n\n\n return (\n          <UserDataItem />\n    );\n      }\n","// extracted by mini-css-extract-plugin\nexport default {\"logout_button\":\"logout_logout_button__+D532\",\"logout_box\":\"logout_logout_box__J-pf9\",\"logout_text\":\"logout_logout_text__M3+5u\"};","import scss from \"./logout.module.scss\";\nimport SvgInsert from \"../../utilsFolder/Svg/Svg\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport operations from '../../../redux/operations/userOperations';\n\n\nexport default function Logout() {\n    const dispatch = useDispatch()\n  \n\n    const onLogout = () => {\n        dispatch(operations.logout())\n    }\n\n    return (\n        <div className={scss.logout_box}>\n            <button className={scss.logout_button} onClick={onLogout}>\n                <SvgInsert id=\"icon-logout\"/>\n                <p className={scss.logout_text}>Logout</p>\n            </button>\n        </div>\n\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"button__primary_not_main\":\"modal-add-pet-pages_button__primary_not_main__ypj+S\",\"button__primary_main\":\"modal-add-pet-pages_button__primary_main__6UTLB\",\"button__secondary\":\"modal-add-pet-pages_button__secondary__q-7f8\",\"button__secondary_active\":\"modal-add-pet-pages_button__secondary_active__H+BuF\",\"button__learn\":\"modal-add-pet-pages_button__learn__Gh7Ff\",\"modalAdds_page\":\"modal-add-pet-pages_modalAdds_page__kFD-P\",\"modalAdds_page__close\":\"modal-add-pet-pages_modalAdds_page__close__-OWMm\",\"modalAdds_page__tittle\":\"modal-add-pet-pages_modalAdds_page__tittle__4VovM\",\"modalAdds_page__input\":\"modal-add-pet-pages_modalAdds_page__input__tw8e9\",\"modalAdds_page__label\":\"modal-add-pet-pages_modalAdds_page__label__XtbYI\",\"modalAdds_page__button\":\"modal-add-pet-pages_modalAdds_page__button__7tqZx\",\"addspet__imgInput\":\"modal-add-pet-pages_addspet__imgInput__4dH5p\",\"addspet__imgLabel\":\"modal-add-pet-pages_addspet__imgLabel__qsG+d\",\"add__pet__container\":\"modal-add-pet-pages_add__pet__container__xobGG\",\"addspetPhoto__container\":\"modal-add-pet-pages_addspetPhoto__container__ddf3R\",\"addspet__photo\":\"modal-add-pet-pages_addspet__photo__D4mvs\",\"addspet__imgLabel_select\":\"modal-add-pet-pages_addspet__imgLabel_select__kF9vd\",\"modalAdds_page__field\":\"modal-add-pet-pages_modalAdds_page__field__aCNSS\",\"modalAdds_page_box\":\"modal-add-pet-pages_modalAdds_page_box__K2BZF\",\"modalAdds_page__photoBox\":\"modal-add-pet-pages_modalAdds_page__photoBox__Pbrna\",\"modalAdds_commit_box\":\"modal-add-pet-pages_modalAdds_commit_box__W6XU2\",\"modalAdds_commit\":\"modal-add-pet-pages_modalAdds_commit__DKD3W\",\"addPet__button\":\"modal-add-pet-pages_addPet__button__RnKuE\"};","import { useState } from 'react';\nimport {useSelector} from 'react-redux';\nimport scss from './modal-add-pet-pages.module.scss';\n// import operationsPets from 'redux/operations/userPetsApi';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport Loader from 'components/utilsFolder/Loader/Loader';\nimport SvgInsert from '../../../utilsFolder/Svg/Svg';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Flatpickr from 'react-flatpickr';\nimport axios from 'axios';\n\nconst { REACT_APP_BASE_URL } = process.env\naxios.defaults.baseURL = `${REACT_APP_BASE_URL}/api`\n\n\nconst EditPetContent = ({ close, pets, _id, }) => {\n  // const dispatch = useDispatch();\n    \n  const [stepOne, setStepOne] = useState(true);\n  const loading = useSelector(state => state.user.loading);\n\n  const isPet = pets.find(e => e._id === _id);\n\n  const dateString = isPet.birthday;\n  const date = new Date(dateString);\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const year = date.getFullYear();\n  const formattedDate = `${month}.${day}.${year}`;\n\n  const [petName, setPetName] = useState(isPet.name);\n  const [petDate, setPetDate] = useState(formattedDate)\n  const [petBreed, setPetBreed] = useState(isPet.breed);\n  const [imageURL, setImageURL] = useState(isPet.image);\n  const [petComments, setPetComments] = useState(isPet.comments);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const changeStepOne = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setPetName(e.currentTarget.value);\n        break;\n\n      case 'date':\n        setPetDate(e.currentTarget.value);\n        break;\n\n      case 'breed':\n        setPetBreed(e.currentTarget.value);\n        break;\n\n      default:\n        return;\n      \n    }\n  };\n\n  const changeStep = () => {\n    return setStepOne(!stepOne);\n  };\n\n  const handleImageChange = e => {\n    const reader = new FileReader();\n    const image = e.target.files[0];\n    if (image?.size > 5242880) {\n      Notify.warning('File is too big, please download max 5 mb!', {\n        timeout: 6000,\n      });\n      setImageURL(null);\n      return;\n    }\n      reader.onloadend = () => {\n      setImageURL(reader.result);\n    };\n      reader.readAsDataURL(image);\n      return;\n  };\n\n  const dateNow = new Date();\n  const formatDate = date => {\n    const dateFormat = new Date(date)\n    return `${\n      dateFormat.getMonth() + 1 < 10\n          ? `0${dateFormat.getMonth() + 1}`\n          : dateFormat.getMonth() + 1\n  }.${\n    dateFormat.getDate() < 10\n        ? `0${dateFormat.getDate()}`\n        : dateFormat.getDate()\n}.${dateFormat.getFullYear()}`\n}\n\n  const handleSubmitForStepOne = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const { name, date, breed } = form.elements;\n    setPetName(name.value);\n    setPetDate(date.value);\n    setPetBreed(breed.value);\n    if (new Date(petDate) >= new Date(formatDate)) {\n      return Report.info(\n        'Pet Info',\n        'Please choose a date no later than today.',\n        'Okay'\n      );\n    }\n    return changeStep();\n  };\n\n \n  \nconst handleSubmit = async (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const { image, comments } = form.elements;\n  setPetComments(comments.value);\n\n  if ( image.files.length > 0) {\n  \n    const data = new FormData();\n    data.append('name', petName);\n    data.append('birthday', petDate);\n    data.append('breed', petBreed);\n    data.append('comments', petComments);\n    data.append('image', image.files[0]);\n    // console.log('image', image.files[0])\n    // console.log('imageURL', imageURL)\n\n    try {\n      await axios.put(`/users/${_id}`, data);\n      setIsSubmitting(false);\n    } catch (error) {\n      setIsSubmitting(false);\n    }\n  } else {\n   \n    try {\n      await axios.put(`/users/${_id}`, {\n        name: petName,\n        birthday: petDate,\n        breed: petBreed,\n        comments: petComments,\n        image: imageURL,\n      });\n          console.log('imageURL', imageURL)\n      setIsSubmitting(false);\n    } catch (error) {\n      setIsSubmitting(false);\n    }\n  }\n\n  setPetComments('');\n  setPetBreed('');\n  setPetDate('');\n  setPetName('');\n  setImageURL(null);\n  form.reset();\n  return close();\n  };\n\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div className={scss.modalAdds_page}>\n        <div className={scss.modalAdds_page__close} onClick={close}>\n          <SvgInsert id=\"icon-close\" />\n        </div>\n        <h3 className={scss.modalAdds_page__tittle}>Edite pet</h3>\n        {stepOne && (\n          <form onSubmit={handleSubmitForStepOne}>\n            <label\n              className={`${scss.modalAdds_page__label} ${scss.modalAdds_page_box}`}\n            >\n              Name pet\n            </label>\n            <input\n              className={scss.modalAdds_page__input}\n              name=\"name\"\n              placeholder=\"Type name pet\"\n              type=\"text\"\n              // required\n              value={petName}\n              onChange={changeStepOne}\n            />\n            <label\n              className={`${scss.modalAdds_page__label} ${scss.modalAdds_page_box}`}\n            >\n              Date of birth\n            </label>\n            <Flatpickr\n              className={scss.modalAdds_page__input}\n              name=\"date\"\n              type=\"text\"\n              placeholder=\"Type date of birth\"\n              // required\n              value={petDate}\n              options={{\n                dateFormat: 'm.d.Y',\n                maxDate: `${formatDate(dateNow)}`,\n            }}\n            onChange={([date]) => {\n                setPetDate(formatDate(date))\n            }}\n            />\n            <label\n              className={`${scss.modalAdds_page__label} ${scss.modalAdds_page_box}`}\n            >\n              Breed\n            </label>\n            <input\n              className={scss.modalAdds_page__input}\n              type=\"text\"\n              name=\"breed\"\n              placeholder=\"Type breed\"\n              // required\n              value={petBreed}\n              onChange={changeStepOne}\n            />\n            <div className={scss.addPet__button}>\n              <button\n                className={`${scss.button__primary_main} ${scss.modalAdds_page__button}`}\n                type=\"submit\"\n              >\n                Next\n              </button>\n              <span\n                className={`${scss.button__primary_not_main} ${scss.modalAdds_page__button}`}\n                onClick={close}\n              >\n                Cancel\n              </span>\n            </div>\n          </form>\n        )}\n        {!stepOne && (\n          <form\n            action=\"\"\n            id=\"book-add-form\"\n            encType=\"multipart/form-data\"\n            onSubmit={handleSubmit}\n          >\n            <div className={scss.add__pet__container}>\n              <p className={scss.modalAdds_page__field}>\n                Add photo and some comments\n              </p>\n              <input\n                className={scss.addspet__imgInput}\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/png, image/jpeg, image/jpg, image/webp\"\n                id=\"img\"\n                // required\n                title='is required'\n                multiple\n                onChange={handleImageChange}\n              />\n              <label className={scss.addspet__imgLabel} htmlFor=\"img\"></label>\n              {/* {imageURL && ( */}\n                <div className={scss.addspetPhoto__container}>\n                  <img src={imageURL} alt=\"pet\" />\n                </div>\n              {/* )} */}\n              <label\n                className={`${scss.modalAdds_page__label} ${scss.modalAdds_commit_box}`}\n              >\n                Comments\n              </label>\n              <textarea\n                className={scss.modalAdds_commit}\n                type=\"text\"\n                name=\"comments\"\n                placeholder=\"Type comments\"\n                defaultValue={petComments}\n                minLength={8}\n                // required\n              />\n\n              <div className={scss.addPet__button}>\n                <button\n                  className={`${scss.button__primary_main} ${scss.modalAdds_page__button}`}\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  // onClick={validateFile}\n                >\n                  Done\n                </button>\n                <span\n                  className={`${scss.button__primary_not_main} ${scss.modalAdds_page__button}`}\n                  onClick={changeStep}\n                >\n                  Back\n                </span>\n              </div>\n            </div>\n          </form>\n        )}\n      </div>\n    </>\n  );\n};\nexport default EditPetContent;","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modaladdspet_modal__-styr\",\"modal__section\":\"modaladdspet_modal__section__Su0Hj\"};","import scss from './modaladdspet.module.scss';\n\nimport React from 'react';\n\nimport { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalAddsPet = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleDownInEscape = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleDownInEscape);\n    return () => {\n      return window.removeEventListener('keydown', handleDownInEscape);\n    };\n  }, [onClose]);\n\n  const handleDown = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  children = React.cloneElement(children, {\n    close: onClose,\n  });\n\n  return createPortal(\n    <div className={scss.modal} onClick={handleDown}>\n      <div className={scss.modal__section}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default ModalAddsPet;\n","import scss from './pets-list.module.scss';\nimport SvgInsert from '../../utilsFolder/Svg/Svg';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport operationsPets from 'redux/operations/userPetsApi';\nimport { useState, useEffect } from 'react';\nimport Loader from 'components/utilsFolder/Loader/Loader';\nimport EditPetContent from '../ModalAddsPet/ModalAddPetPages/EditPetContent';\nimport ModalAddsPet from '../ModalAddsPet/ModalAddsPet';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\n\nexport function PetsList() {\n\nconst dispatch = useDispatch();\n  const [modalShow, setModalShow] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n  const [isActiveEdite, setIsActiveEdite] = useState(false);\nconst loading = useSelector(state => state.user.loading);\n \n\n  useEffect(() => {\n    dispatch(operationsPets.getUserPet());\n  }, [dispatch]);\n  \n  const pets = useSelector(state => state.user.pets);\n\n  const onDeletePet = (_id) => {\n    Confirm.show(\n      '',\n      'Are you sure you want to delete your petcard?',\n      'Yes',\n      'No',\n      () => {\n        dispatch(operationsPets.deletePet(_id)).then(() => {\n          dispatch(operationsPets.getUserPet());\n        })\n      },\n      () => {},\n      {\n        messageFontSize: '20px',\n        borderRadius: '8px',\n        cssAnimationStyle: 'zoom',\n        okButtonColor: '#ffffff',\n        okButtonBackground: '#eebb9c',\n        cancelButtonColor: '#ffffff',\n        cancelButtonBackground: '#F59256',\n      },\n    );\n  }\n\n   const closeModal = () => {\n    setModalShow(false);\n     document.body.style.overflow = 'visible';\n     dispatch(operationsPets.getUserPet());\n  };\n\n  const showModal = () => {\n    setModalShow(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const active = isActive ? \"icon-delete\" : \"icon-deletepet\";\n  const activeEdite = isActiveEdite ? \"icon-edit_active\" : \"icon-edit\";\n\n  const elements = Array.isArray(pets) && pets.map(({ name, birthday, breed, image, comments, _id }) => {\n\n    const editDate = e => {\n      const reversDate = e.slice(0, 10).split('-').reverse();\n      return reversDate.join('.');\n }\n\n    return (\n        <li className={scss.petsList_box} key={_id}>\n        {loading && <Loader />}\n          <img className={scss.petsList_photo} src={image} alt=\"\" />\n          <div className={scss.petsList_text_box}>\n            <p className={scss.petsList_field}>\n              <span className={scss.labelPets}>Name:</span> \n           {name}</p>\n            <p className={scss.petsList_field}>\n              <span className={scss.labelPets}>Date of birth:</span>    \n            {editDate(birthday)}</p>\n            <p className={scss.petsList_field}>\n              <span className={scss.labelPets}>Breed:</span>   \n            {breed} </p>\n            <p className={scss.petsList_field}>\n              <span className={scss.labelPets}>Comments:</span>   \n              {comments} </p>\n          <button\n            className={scss.petsList_button}\n            onClick={() => onDeletePet(_id)}\n            type=\"button\"\n            onMouseEnter={() => setIsActive(true)}\n            onMouseLeave={() => setIsActive(false)}\n          >\n            <SvgInsert className={scss.icon_delete} id={active} />\n            </button>\n            <button\n              className={scss.iconEdit_btn}\n            onClick={showModal}\n            onMouseEnter={() => setIsActiveEdite(true)}\n            onMouseLeave={() => setIsActiveEdite(false)}\n            >\n              <SvgInsert id={activeEdite} />\n            </button>\n            <div >\n              {modalShow && (\n                <>\n                  <ModalAddsPet onClose={closeModal}>\n                    <EditPetContent _id={_id} pets={pets} />\n                  </ModalAddsPet>\n                </>\n              )}\n            </div>\n          </div>\n        </li>\n    );\n  });\n\n  return (\n    <>\n      <ol className={scss.petList_container} >{elements}</ol>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport scss from './modal-add-pet-pages.module.scss';\nimport operationsPets from 'redux/operations/userPetsApi';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport Loader from 'components/utilsFolder/Loader/Loader';\nimport SvgInsert from '../../../utilsFolder/Svg/Svg';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n// import 'flatpickr/dist/themes/material_orange.css'\nimport Flatpickr from 'react-flatpickr'\n// import { add } from 'date-fns';\n\nconst AddsPetContent = ({ close }) => {\n  const [stepOne, setStepOne] = useState(true);\n  const [petName, setPetName] = useState('');\n  const [petDate, setPetDate] = useState('');\n  const [petBreed, setPetBreed] = useState('');\n  const [imageURL, setImageURL] = useState(null);\n  \n  const loading = useSelector(state => state.user.loading);\n\n  const dispatch = useDispatch();\n\n  const changeStepOne = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setPetName(e.currentTarget.value);\n        break;\n\n      // case 'date':\n      //   setPetDate(e.currentTarget.value);\n      //   break;\n\n      case 'breed':\n        setPetBreed(e.currentTarget.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const changeStep = () => {\n    return setStepOne(!stepOne);\n  };\n\n  const handleImageChange = e => {\n    const reader = new FileReader();\n    const image = e.target.files[0];\n    if (image?.size > 5242880) {\n      Notify.warning('File is too big, please download max 5 mb!', {\n        timeout: 6000,\n      });\n      setImageURL(null);\n      return;\n    }\n    reader.onloadend = () => {\n      setImageURL(reader.result);\n    };\n    reader.readAsDataURL(image);\n    return;\n  };\n\n  const dateNow = new Date();\n\n  const formatDate = date => {\n    const dateFormat = new Date(date)\n    return `${\n      dateFormat.getMonth() + 1 < 10\n          ? `0${dateFormat.getMonth() + 1}`\n          : dateFormat.getMonth() + 1\n  }.${\n    dateFormat.getDate() < 10\n        ? `0${dateFormat.getDate()}`\n        : dateFormat.getDate()\n}.${dateFormat.getFullYear()}`\n}\n\n  const handleSubmitForStepOne = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const { name, date, breed } = form.elements;\n    setPetName(name.value);\n    setPetDate(date.value);\n    setPetBreed(breed.value);\n    return changeStep();\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const { image, comments } = form.elements;\n    const data = new FormData();\n    data.append('name', petName);\n    data.append('birthday', petDate);\n    data.append('breed', petBreed);\n    data.append('comments', comments.value);\n    data.append('image', image.files[0]);\n    setPetBreed('');\n    setPetDate('');\n    setPetName('');\n    setImageURL(null);\n    dispatch(operationsPets.addPet(data));\n    form.reset();\n    return close();\n  };\n\n\n\n  const validateFile = () => {\n    if(!imageURL){\n      Report.warning(\n        'Pet Warning',\n        'Please add a photo.',\n        'Okay',\n        );\n    }\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div className={scss.modalAdds_page}>\n        <div className={scss.modalAdds_page__close} onClick={close}>\n          <SvgInsert id=\"icon-close\" />\n        </div>\n        <h3 className={scss.modalAdds_page__tittle}>Add pet</h3>\n        {stepOne && (\n          <form onSubmit={handleSubmitForStepOne}>\n            <label\n              className={`${scss.modalAdds_page__label} ${scss.modalAdds_page_box}`}\n            >\n              Name pet\n            </label>\n            <input\n              className={scss.modalAdds_page__input}\n              name=\"name\"\n              placeholder=\"Type name pet\"\n              type=\"text\"\n              required\n              value={petName}\n              onChange={changeStepOne}\n            />\n            <label\n              className={`${scss.modalAdds_page__label} ${scss.modalAdds_page_box}`}\n            >\n              Date of birth\n            </label>\n            <Flatpickr\n              className={scss.modalAdds_page__input}\n              name=\"date\"\n              type=\"text\"\n              placeholder=\"Type date of birth\"\n              required\n              value={petDate}\n              options={{\n                dateFormat: 'm.d.Y',\n                maxDate: `${formatDate(dateNow)}`,\n            }}\n            onChange={([date]) => {\n                setPetDate(formatDate(date))\n            }}\n            />\n            <label\n              className={`${scss.modalAdds_page__label} ${scss.modalAdds_page_box}`}\n            >\n              Breed\n            </label>\n            <input\n              className={scss.modalAdds_page__input}\n              type=\"text\"\n              name=\"breed\"\n              placeholder=\"Type breed\"\n              required\n              value={petBreed}\n              onChange={changeStepOne}\n            />\n            <div className={scss.addPet__button}>\n              <button\n                className={`${scss.button__primary_main} ${scss.modalAdds_page__button}`}\n                type=\"submit\"\n              >\n                Next\n              </button>\n              <span\n                className={`${scss.button__primary_not_main} ${scss.modalAdds_page__button}`}\n                onClick={close}\n              >\n                Cancel\n              </span>\n            </div>\n          </form>\n        )}\n        {!stepOne && (\n          <form\n            action=\"\"\n            id=\"book-add-form\"\n            encType=\"multipart/form-data\"\n            onSubmit={handleSubmit}\n          >\n            <div className={scss.add__pet__container}>\n              <p className={scss.modalAdds_page__field}>\n                Add photo and some comments\n              </p>\n\n              <input\n                className={scss.addspet__imgInput}\n                type=\"file\"\n                name=\"image\"\n                accept=\"image/png, image/jpeg, image/jpg, image/webp\"\n                id=\"img\"\n                required\n                title='is required'\n                multiple\n                onChange={handleImageChange}\n              />\n              <label className={scss.addspet__imgLabel} htmlFor=\"img\">\n                {imageURL && (\n                  <div className={scss.addspetPhoto__container}>\n                    <img src={imageURL} alt=\"pet\" className={scss.addspet__photo} />\n                  </div>\n                )}\n              </label>\n              <label\n                className={`${scss.modalAdds_page__label} ${scss.modalAdds_commit_box}`}\n              >\n                Comments\n              </label>\n              <textarea\n                className={scss.modalAdds_commit}\n                type=\"text\"\n                name=\"comments\"\n                placeholder=\"Type comments\"\n                minLength={8}\n                required\n              />\n\n              <div className={scss.addPet__button}>\n                <button\n                  className={`${scss.button__primary_main} ${scss.modalAdds_page__button}`}\n                  type=\"submit\"\n                  onClick={validateFile}\n                >\n                  Done\n                </button>\n                <span\n                  className={`${scss.button__primary_not_main} ${scss.modalAdds_page__button}`}\n                  onClick={changeStep}\n                >\n                  Back\n                </span>\n              </div>\n            </div>\n          </form>\n        )}\n      </div>\n    </>\n  );\n};\nexport default AddsPetContent;\n","import { PetsList } from '../PetsList/PetsList'\nimport { EmptyPetsList } from '../EmptyPetsList/EmptyPetsList'\nimport ModalAddsPet from '../ModalAddsPet/ModalAddsPet'\nimport AddsPetContent from '../ModalAddsPet/ModalAddPetPages/AddsPetContent'\nimport operationsPets from 'redux/operations/userPetsApi'\nimport { useEffect } from 'react'\nimport Loader from 'components/utilsFolder/Loader/Loader'\nimport { useState } from 'react'\nimport SvgInsert from '../../utilsFolder/Svg/Svg'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport scss from './pets-data.module.scss'\n\nfunction PetsData() {\n    const [modalShow, setModalShow] = useState(false)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(operationsPets.getUserPet());\n      }, [dispatch]);\n    \n    const pets = useSelector(state => state.user.pets)\n\n    const loading = useSelector(state => state.user.loading)\n\n    const closeModal = () => {\n        setModalShow(false)\n        document.body.style.overflow = 'visible'\n    }\n\n    const showModal = () => {\n        setModalShow(true)\n        document.body.style.overflow = 'hidden'\n    }\n\n    return (\n        <>\n            {loading && <Loader />}\n            <div className={scss.petsData_title_box}>\n                <h2 className={scss.petsData_title}>My pets:</h2>\n                <div className={scss.addPetModal_buttonBox}>\n                    <button\n                        className={scss.addPetModal_button}\n                        type=\"button\"\n                        onClick={showModal}\n                    >\n                        Add pet{' '}\n                        <SvgInsert\n                            className={scss.iconAddPet}\n                            id=\"icon-add-pet\"\n                        />\n                    </button>\n                </div>\n            </div>\n            <div className={scss.petsData__container}>\n                {modalShow && (\n                    <>\n                        <ModalAddsPet onClose={closeModal}>\n                            <AddsPetContent />\n                        </ModalAddsPet>\n                    </>\n                )}\n\n                <div className={scss.overflow}>\n                    {pets.length === 0 ? <EmptyPetsList text='You haven`t added any animals to your list yet'/> : <PetsList />}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default PetsData\n","// extracted by mini-css-extract-plugin\nexport default {\"delete_account_button\":\"delete-account_delete_account_button__hYzSV\",\"delete_account_box\":\"delete-account_delete_account_box__Knbbz\",\"delete_icon\":\"delete-account_delete_icon__si2ko\"};","import scss from \"./delete-account.module.scss\";\nimport SvgInsert from \"../../utilsFolder/Svg/Svg\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n import operations from \"redux/operations/userOperations\";\nimport axios from 'axios';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\n\nconst { REACT_APP_BASE_URL } = process.env\naxios.defaults.baseURL = `${REACT_APP_BASE_URL}/api`\n\nexport default function DeleteAccount() {\n    const dispatch = useDispatch();\n    const token = useSelector(state => state.auth.token)\n    \n    const handlDeleteAccount = () => {\n            Confirm.show(\n      '',\n      'Are you sure you want to delete your account?',\n      'Yes',\n      'No',\n                () => {\n                    dispatch(operations.deleteAccount(token)).then(() => {\n          window.location.replace('http://localhost:3000/register');\n      }) },\n      () => {},\n      {\n        messageFontSize: '20px',\n        borderRadius: '8px',\n        cssAnimationStyle: 'zoom',\n        okButtonColor: '#ffffff',\n        okButtonBackground: '#eebb9c',\n        cancelButtonColor: '#ffffff',\n        cancelButtonBackground: '#F59256',\n      },\n    )\n    };\n\n    return (\n       <div className={scss.delete_account_box}>\n            <button className={scss.delete_account_button} onClick={() => handlDeleteAccount()}>\n                <p className={scss.delete_account_text}>Delete account</p>\n                <SvgInsert id=\"icon-delete\" />\n            </button>\n        </div>\n\n    )\n}\n\n\n\n\n","import React from 'react';\nimport { UserData } from '../../components/userFolder/UserData/UserData';\nimport Logout from '../../components/userFolder/Logout/Logout';\nimport PetsData from '../../components/petsUserFolder/PetsData/PetsData';\nimport DeleteAccount from '../../components/userFolder/DeleteAccount/DeleteAccount';\nimport scss from '../../helpers/container.module.scss';\nimport style from './user-page.module.scss';\n\nfunction UserPage() {\n  return (\n    <div className={style.userPage_container}>\n      <div className={scss.container}>\n        <div className={style.userPage_section}>\n          <h2 className={style.userPage_title}>My information:</h2>\n          <div className={style.userData_box}>\n            <UserData />\n            <div  className={style.userData_box_btn}>\n              <Logout />\n              <DeleteAccount/>\n            </div>\n          </div>\n        </div>\n        <div className={style.petsData_section}>\n          <PetsData />\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default UserPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"petsData_section\":\"pets-data_petsData_section__UieBz\",\"petsData_title_box\":\"pets-data_petsData_title_box__8HxHW\",\"petsData_title\":\"pets-data_petsData_title__Qq4C7\",\"addPetModal_buttonBox\":\"pets-data_addPetModal_buttonBox__HEU95\",\"addPetModal_button\":\"pets-data_addPetModal_button__qP0Zy\",\"petModal_button\":\"pets-data_petModal_button__sBu2c\",\"petModal_box_btn\":\"pets-data_petModal_box_btn__IdO3N\",\"petsData__container\":\"pets-data_petsData__container__2G1w-\",\"overflow\":\"pets-data_overflow__Rtx7o\"};","// extracted by mini-css-extract-plugin\nexport default {\"petsList_box\":\"pets-list_petsList_box__bIXg+\",\"petsList_photo\":\"pets-list_petsList_photo__JyEpp\",\"petsList_text_box\":\"pets-list_petsList_text_box__Vg0+q\",\"labelPets\":\"pets-list_labelPets__xVmkl\",\"petsList_field\":\"pets-list_petsList_field__+BhHE\",\"petsList_button\":\"pets-list_petsList_button__QczPj\",\"iconEdit_btn\":\"pets-list_iconEdit_btn__tEFOh\",\"petList_container\":\"pets-list_petList_container__jrBD0\",\"icon_edit\":\"pets-list_icon_edit__HNwQg\"};","// extracted by mini-css-extract-plugin\nexport default {\"userItem_container\":\"user-data-item_userItem_container__neJio\",\"userItem_box_yourPhoto\":\"user-data-item_userItem_box_yourPhoto__A6dWO\",\"userItem_box_btnPhoto\":\"user-data-item_userItem_box_btnPhoto__e8bo1\",\"userItem_button\":\"user-data-item_userItem_button__0Gg6V\",\"userDataForm_box\":\"user-data-item_userDataForm_box__UwT0M\",\"field_box\":\"user-data-item_field_box__4xcgt\",\"userDataForm_field\":\"user-data-item_userDataForm_field__32mZT\",\"userDataForm_field_active\":\"user-data-item_userDataForm_field_active__CXnHf\",\"userDataForm_field_input\":\"user-data-item_userDataForm_field_input__1QaxO\",\"iconEdit_btn\":\"user-data-item_iconEdit_btn__LP-z7\",\"userDataForm_label\":\"user-data-item_userDataForm_label__oNaKJ\",\"userItem_button_icon\":\"user-data-item_userItem_button_icon__rwvks\",\"userItem_edit_photo\":\"user-data-item_userItem_edit_photo__55rGT\",\"userItem_input_edit_photo\":\"user-data-item_userItem_input_edit_photo__LoxV3\",\"userItem__yourPhoto\":\"user-data-item_userItem__yourPhoto__Xt9Av\",\"iconEdit_active\":\"user-data-item_iconEdit_active__6fdvC\",\"iconEdit\":\"user-data-item_iconEdit__qx3-w\",\"iconEdit_done\":\"user-data-item_iconEdit_done__EvnCx\",\"loader__content\":\"user-data-item_loader__content__SyicD\",\"loader_oval\":\"user-data-item_loader_oval__YNlqW\"};","// extracted by mini-css-extract-plugin\nexport default {\"userPage_container\":\"user-page_userPage_container__PYPVq\",\"userPage_section\":\"user-page_userPage_section__+jTMM\",\"petsData_section\":\"user-page_petsData_section__jEW1G\",\"userPage_title\":\"user-page_userPage_title__bSasD\",\"userData_box\":\"user-page_userData_box__sKupV\",\"userData_box_btn\":\"user-page_userData_box_btn__ZDRDR\"};"],"names":["EmptyPetsList","text","className","scss","src","cat","alt","REACT_APP_BASE_URL","process","UserFormik","dispatch","useDispatch","userInStore","useSelector","state","auth","user","token","useState","loading","setLoading","userName","setUserName","userEmail","setUserEmail","userBirthday","setUserBirthday","userPhone","setUserPhone","userCity","setUserCity","dateNow","Date","formatDate","date","dateFormat","getMonth","getDate","getFullYear","useEffect","undefined","name","email","birthday","phone","city","fetch","method","headers","Authorization","then","response","json","data","catch","error","console","log","handleChange","e","currentTarget","value","active","setActive","changeIcon","toggleIcon","Svg","id","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","onSubmit","preventDefault","elements","disabled","operations","Notify","timeout","onChange","type","onClick","test","length","options","maxDate","axios","UserDataItem","avatar","accept","reader","FileReader","file","target","files","size","onloadend","readAsDataURL","htmlFor","UserData","Logout","close","pets","_id","stepOne","setStepOne","isPet","find","dateString","month","day","year","formattedDate","petName","setPetName","petDate","setPetDate","breed","petBreed","setPetBreed","image","imageURL","setImageURL","comments","petComments","setPetComments","isSubmitting","setIsSubmitting","changeStepOne","changeStep","handleSubmit","form","FormData","append","reset","Loader","Report","placeholder","action","encType","title","multiple","result","defaultValue","minLength","modalRoot","document","querySelector","onClose","children","handleDownInEscape","code","window","addEventListener","removeEventListener","React","createPortal","PetsList","modalShow","setModalShow","isActive","setIsActive","isActiveEdite","setIsActiveEdite","operationsPets","closeModal","body","style","overflow","showModal","activeEdite","Array","isArray","map","slice","split","reverse","join","Confirm","messageFontSize","borderRadius","cssAnimationStyle","okButtonColor","okButtonBackground","cancelButtonColor","cancelButtonBackground","onDeletePet","onMouseEnter","onMouseLeave","required","DeleteAccount","location","replace"],"sourceRoot":""}